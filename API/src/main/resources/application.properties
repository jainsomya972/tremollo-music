## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:postgresql://52.172.30.204:5432/car_parking
spring.datasource.url=jdbc:postgresql://eddy-db.ca2ryfcxfz0f.ap-south-1.rds.amazonaws.com/eddy_0_1

spring.datasource.username= postgres
spring.datasource.password= eddy7777

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect
#spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

server.port = 8080

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults: false

spring.datasource.hikari.connectionTimeout=40000
spring.datasource.hikari.idleTimeout=1200000
spring.datasource.hikari.maxLifetime=1800000

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testOnBorrow = true
#spring.datasource.testWhileIdle = true
#spring.datasource.timeBetweenEvictionRunsMillis = 60000
#spring.datasource.minEvictableIdleTimeMillis = 30000
#spring.datasource.validationQuery = SELECT 1
spring.datasource.max-active = 15
spring.datasource.max-idle = 10
spring.datasource.max-wait = 8000

# multipart file upload properties
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1500MB

# AWS Properties
cloud.aws.stack.auto=false
cloud.aws.credentials.accessKey=AKIA6DTNMKNRUCSZBK7R
cloud.aws.credentials.secretKey=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

app.awsServices.bucketName=eddy-bucket-0-1
app.awsServices.region=AP_SOUTH_1

# SSL configuration
security.require-ssl=true
#server.ssl.key-store:/etc/letsencrypt/live/api.tremollo.co/keystore.p12
#server.ssl.key-store-password: tremollo@123
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat